@model PostVm
@{

    
    var authorLink = HttpUtility.UrlDecode(Url.RouteUrl("UserProfile", new { id = Model.Username } ));

}
@if (Model.Parent != null)
{
    <div class="mb-3 " >
        @await Html.PartialAsync("Post", Model.Parent )
    </div>
}
<div class="row pb-1 pb-sm-2 pb-lg-3" id="post_@Model.StatementId" >
    
    <div class="col-auto">
        <a href="@authorLink">
            <img class="avatar-thumb" src="@Url.Action("Photo", "BackEnd",  new { id= Model.AvatarId})" />
        </a>
    </div>
    <div class="col-auto">
        @if (!string.IsNullOrEmpty(Model.Name?.Trim()))
        {
            <a href="@authorLink">@Model.Name </a><br />
            @( $"@{Model.Username}" )
        }
        else
        {
            <a class="fs-4" href="@authorLink">@Model.Username </a><br />
        }
    </div>


</div>
<div class="row">
    <div class="card card-body border-post @( Model.Child == null ? "emphasized-statement" : "text-bg-dark cursor-pointer" )"
         data-statementid="@Model.StatementId"
        onclick="@(Model.Child != null ? "navigateToPost(this)" : null )">

        @Html.Raw(Model.RenderedMessage)
        @if (Model.PhotoId != null)
        {
            <a href="@Url.Action("Photo", "BackEnd", new {id = Model.PhotoId})">
                <img src="@Url.Action("Thumb", "BackEnd", new {id = Model.PhotoId})" class="img-fluid" >
            </a>
        }

        @await Html.PartialAsync( "_StatementStats", Model )
    </div>    
</div>

@* dont load comments on parents  *@

@if ( Model.Child == null ){

    @await Html.PartialAsync("_StatementList", Model.StatementListVm)

}

@section Scripts {

    @if (Model.Child == null && Model.Parent != null )
    {
        <script>

            setTimeout(() => timeline.myScrollTo("post_@Model.StatementId"), 300);

        </script>

    }

}

